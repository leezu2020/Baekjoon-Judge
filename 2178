import java.util.*;

class pos{
	int x,y,depth;
	
	public pos(int x,int y,int depth) {
		this.x = x;
		this.y = y;
		this.depth = depth;
	}
}

public class Main {
	
	public static int N,M;
	public static int[][] maze;
	public static int[][] checked;
	public static int[] dx = {0,1,0,-1};
	public static int[] dy = {1,0,-1,0};
	
    public static void main(String[] args) {
    
    	Scanner sc = new Scanner(System.in);
    	
    	N = sc.nextInt();
    	M = sc.nextInt();
    	sc.nextLine();
    	
    	maze = new int[N][M];
    	checked = new int[N][M];
    	
    	for(int i=0; i<N; i++) {
    		String temp = sc.nextLine();
    		for(int j=0; j<M; j++) {
    			maze[i][j] = temp.charAt(j) - '0';
    		}
    	}
    	
    	System.out.println(dfs());
    	
    	
    	sc.close();
    }
		
    public static int dfs() {
    	int min=Integer.MAX_VALUE;
    	Queue <pos> q = new LinkedList<pos>();
    	
    	q.add(new pos(0,0,1));
    	checked[0][0] = 1;
    	
    	while(!q.isEmpty()) {
    		pos now = q.poll();
    		
    		if(now.x==N-1 && now.y==M-1) {
    			min = Math.min(min, now.depth);
    		}
    		
    		for(int i=0; i<4; i++) {
    			int ax = now.x + dx[i];
    			int ay = now.y + dy[i];
    			
    			if(ax>=0 && ay>=0 && ax<N && ay<M) {
    				if(maze[ax][ay]==1 && checked[ax][ay]==0) {
    					//체크
//    					System.out.println(ax+" "+ay+"를 통과중"+(now.depth+1));
    					checked[ax][ay]=1;
    					q.add(new pos(ax,ay,now.depth+1));
    				}
    			}
    		}
    		
    	}
    	    	
    	
    	return min;
    }
    
}

    
    
    	
    
  
