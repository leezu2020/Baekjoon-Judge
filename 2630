import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Comparator;
import java.util.StringTokenizer;

public class Main {
	static int[] result = new int[2];

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int n = Integer.parseInt(br.readLine());
		int[][] arr = new int[n][n];
		for (int i = 0; i < n; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			for (int j = 0; j < n; j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		check(arr, n);

		System.out.print(result[0] + "\n" + result[1]);

	}

	public static void check(int[][] arr, int n) {
		int[][] zero = new int[n][n];
		int[][] one = new int[n][n];
		for (int[] line : one) {
			Arrays.fill(line, 1);
		}

		if (Arrays.deepEquals(arr, zero)) {
			result[0]++;
			return;
		} else if (Arrays.deepEquals(arr, one)) {
			result[1]++;
			return;
		}
		if(n == 1) {
			return;
		}

		check(seperate(arr, 0, 0, n), n / 2);
		check(seperate(arr, n / 2, 0, n), n / 2);
		check(seperate(arr, 0, n / 2, n), n / 2);
		check(seperate(arr, n / 2, n / 2, n), n / 2);
		
		return;
	}

	public static int[][] seperate(int[][] arr, int x, int y, int n) {
		int[][] arr_sep = new int[n / 2][n / 2];

		for (int i = 0; i < n / 2; i++) {
			for (int j = 0; j < n / 2; j++) {
				arr_sep[i][j] = arr[i + x][j + y];
			}
		}

		return arr_sep;
	}
}
