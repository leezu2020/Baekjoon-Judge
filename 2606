import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	public static int[] checked;
	public static int[][] rel;
	public static int cnt = 0;	// dfsìš©
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int com = sc.nextInt();
		checked = new int[com + 1];
		rel = new int[com + 1][com + 1];
		int n = sc.nextInt();
		
		for(int i=0; i<n; i++) {
			int x = sc.nextInt();
			int y = sc.nextInt();
			rel[x][y] = 1;
			rel[y][x] = 1;
		}
		
		System.out.println(bfs());
		
		//dfs
		//dfs(1);
		//System.out.println(cnt);
	}
	
	public static int bfs() {
		int result = 0;
		
		Queue<Integer> q = new LinkedList<>();
		q.add(1);
		checked[1] = 1;
		
		while(!q.isEmpty()) {
			int now = q.poll();
			
			for(int i=2; i<checked.length; i++) {
				if(rel[now][i] == 1 && checked[i] != 1) {
					checked[i] = 1;
					result++;
					q.add(i);
				}
			}
		}
		
		return result;
	}
	
	public static void dfs(int a) {
		checked[a] = 1;

		for (int i = 1; i < checked.length; i++) {
			if (rel[a][i] == 1 && checked[i] != 1) {
				cnt++;
				dfs(i);
			}
		}
	}
	
}
