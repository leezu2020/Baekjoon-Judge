import java.io.IOException;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import java.util.Scanner;

public class Main {
	
	public static int[][] map;
	public static int[] result = new int[3];	// 0: -1, 1: 0, 2: 1
	
	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(System.in);

		int n = sc.nextInt();
		int[] arr = new int[n];
		int[] range = new int[8001];
		int max = Integer.MIN_VALUE;
		int min = Integer.MAX_VALUE;
		double sum = 0;
		for(int i=0; i<n; i++) {
			arr[i] = sc.nextInt();
			max = Math.max(arr[i], max);
			min = Math.min(arr[i], min);
			sum += arr[i];
			range[arr[i] + 4000]++;
		}
		Arrays.sort(arr);
		
		int temp_max = 0;
		List<Integer>mode = new LinkedList<>();
		for(int i=0; i<8001; i++) {
			if(range[i] > 0) {
				if(temp_max < range[i]) {
					temp_max = range[i];
					mode.clear();
					mode.add(i - 4000);
				} else if(temp_max == range[i]) {
					mode.add(i - 4000);
				}
			}
		}
		
		
		
		System.out.println(Math.round(sum/n));
		System.out.println(arr[n/2]);
		if(mode.size() > 1)
			System.out.println(mode.get(1));
		else
			System.out.println(mode.get(0));
		System.out.println(max - min);
	}
}
